/* 
&display=swap
&subset=cyrillic-ext 
*/

/* ОБНУЛЕНИЕ СТИЛЕЙ */
*,
*::before,
*::after {
	margin: 0;
	padding: 0;
	border: 0;
	box-sizing: border-box;
}
li {
	list-style: none;
}
a,
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: none;
}
h1,
h2,
h3,
h4,
h5,
h6 {
	font-weight: inherit;
	font-size: inherit;
}
img {
	vertical-align: top;
}
html,
body {
	height: 100%;
}
html {
	font-size: 16px; /* по умолчанию */
}
body {
	line-height: 1;
	/* color: #000; */
	/* font-family:""; */
	overflow-x: hidden;
	font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
	background-color: #333;
}
.wrapper {
	min-height: 100%;
	padding: 30px;
	overflow: hidden;
}
/* ------------------------------ */

.main {
	background-color: rgba(255, 255, 255, 0.05);
	height: 500px;
}
/*
Flexbox - это целый модуль, содержащий в себе набор свойств и их значений как для родителя flex-контейнера так и для его дочерних элементов flex-элементов. Основным преимуществом гибкой FLEX разметки является возможность изменять ширину/высоту пространство вокруг и порядок flex-элементов, для того чтобы наилучшим образом заполнить доступное пространство flex-контейнера. 
*/

.main__block {
	margin: 0 -10px;
}
/* Флекс-контейнер */
.block {
	/* height: 600px; */

	/* Включение флекс-модуля */
	display: flex;

	/* Определяет смогут ли flex-элементы перемещаться на следующие строки когда перестают помещаться внутри flex-контейнера. */
	/* flex-wrap: wrap; */

	/*
	Определяет выравнивание вдоль основной оси (направление зависит от значения свойства flex-direction). 
	*/
	/* justify-content: flex-start; */

	/*
	Определяет выравнивание вдоль поперечной оси (направление зависит от значения свойства flex-direction). 
	*/
	/* align-items: flex-start; */

	/*
	Устанавливает основную ось, таким образом определяет направление flex-элементов расположенных в flex-контейнере.
	*/
	/* flex-direction: row; */

	/*
	Определяет выравнивание вдоль поперечной оси, при наличии свободного пространства, и флекс-элементы расположены в 2 и более строки (направление зависит от значения свойства flex-direction). 
	*/
	/* align-content: stretch; */

	/*
	Управляет расстоянием (разрывом) между флекс-элементами
	*/
	/* 
	row-gap - между рядами
	column-gap - между колонками
	gap: row-gap column-gap
	 */
	/* gap: 20px; */
	row-gap: 20px;
}
/* Флекс-элемент */
.block__element {
	margin: 0 10px;
	background-color: #77608d;
	padding: 20px;
	font-size: 30px;
	color: #fff;
	flex: 0 0 100%;
}

/*
Управляет порядком, в котором располагаются flex-элементы внутри flex-контейнера.
*/

.block__element:nth-child(1) {
	order: 0;
}
.block__element:nth-child(2) {
	order: 1;
}
.block__element:nth-child(3) {
	order: 2;
}
.block__element:nth-child(4) {
	order: 3;
}

.block__element_first {
	/*
	Переопределяет для конкретного flex-элемента выравнивание вдоль поперечной оси (направление зависит от значения свойства flex-direction).
	*/
	/* align-self: center; */

	/*
	Определяет размер элемента по умолчанию, до распределения оставшегося пространства. Значения могут быть в процентах пикселях и т.д.
	*/
	/* flex-basis: auto; */
	/* flex-basis: auto; */

	/*
	Определяет возможность элемента увеличиваться в размере, при необходимости заполняя весь flex-контейнер. 0 запрещено. 1 разрешено. 
	*/
	/* flex-grow: 0; */
	/*
	Определяет возможность элемента уменьшаться в размере, при необходимости заполняя весь flex-контейер. 0 запрещено. 1 разрешено.
	*/
	/* flex-shrink: 1; */

	/*
	Определяет возможность элемента уменьшаться и увеличиваться в размере, при необходимости заполняя весь flex-контейнер (0 запрещено. 1 разрешено). А так же задаёт базовый размер. 
	*/
}
